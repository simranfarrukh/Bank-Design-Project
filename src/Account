/**
 * @author Simran 
 * @date 03.28.2022
 */
public abstract class Account {
	private final long ACCOUNT_ID; 
	private static long nextAccountId = 1000;
	protected double balance;
	
	//constructor that makes sure Account ID remains unique
	public Account() {
		super();
		ACCOUNT_ID = nextAccountId;
		nextAccountId = nextAccountId + 5;
	}
	
	//returns the unique Account ID
	public long getACCOUNT_ID() {
		return ACCOUNT_ID;
	}
	
	//withdraw method that allows overdraw
	public double withdraw(double amount) {
		balance = balance - amount;
		return amount;
	}
	
	//deposit method
	public void deposit(double amount) {
		balance = balance + amount;
	}
	
	//returns the correct balance which is equal to the balance
	public void correctBalance(double amount) {
		balance = amount;
	}
	
	//returns balance
	public double getBalance() {
		return balance;
	}
	
}
